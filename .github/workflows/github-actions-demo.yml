name: ECG-Bench CI/CD
run-name: ${{ github.actor }} is running tests ðŸš€
on: [push, pull_request]
jobs:
  Build-and-Test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
          
      - name: Install PyTorch and special dependencies
        run: |
          python -m pip install --upgrade pip
          # Install PyTorch with specific CUDA support
          pip install torch==2.3.1 torchvision==0.18.1 torchaudio==2.3.1 --index-url https://download.pytorch.org/whl/cu121
          
          # Install Flash Attention 2
          pip cache remove flash_attn
          pip install flash-attn==2.7.4.post1 --no-cache-dir
          
          # Install LLM Blender and TRL packages
          pip install git+https://github.com/yuchenlin/LLM-Blender.git
          pip install trl[judges]
          
      - name: Install remaining dependencies
        run: |
          if [ -f requirements.txt ]; then 
            # Install remaining requirements but skip already installed packages
            pip install -r requirements.txt --no-deps
          fi
          pip install pytest pytest-xdist
          
      - name: Install project in development mode
        run: |
          pip install -e .
          
      - name: List project structure
        run: |
          ls -la
          
      - name: Run core component tests
        run: |
          pytest -xvs tests/test_core_components.py
          
      - name: Run data loader tests
        run: |
          pytest -xvs tests/test_data_loaders.py
          
      - name: Run model tests
        run: |
          pytest -xvs tests/test_models.py
          
      - name: Run GPU compatibility tests (if available)
        run: |
          if [ $(python -c "import torch; print(torch.cuda.is_available())") == "True" ]; then
            pytest -xvs tests/test_gpu.py
          else
            echo "CUDA not available, skipping GPU tests"
          fi
          
      - name: Run transformers tests (if available)
        run: |
          if [ -d "transformers" ]; then
            pytest -xvs tests/test_transformers.py
          else
            echo "Transformers directory not found, skipping transformers tests"
          fi
